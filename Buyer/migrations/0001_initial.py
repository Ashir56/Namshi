# Generated by Django 4.0 on 2022-01-20 12:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Product', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShippingCountries',
            fields=[
                ('shippingCountry_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country_name', models.CharField(max_length=50)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=50)),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_pic', models.ImageField(null=True, upload_to='buyer')),
                ('gender', models.CharField(max_length=10)),
                ('dob', models.DateField(max_length=10, null=True)),
                ('phoneNumber', models.CharField(max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('coupon', models.DecimalField(decimal_places=2, default=0.0, max_digits=50)),
                ('coupon_type', models.CharField(choices=[('PE', 'PERCENTAGE'), ('FI', 'FIXED')], default='PE', max_length=2)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Buyer.shippingcountries', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BuyerWishlist',
            fields=[
                ('buyerWishlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Buyer.buyer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerCart',
            fields=[
                ('buyerCart_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_quantity', models.IntegerField(default=1, max_length=50)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Buyer.buyer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerCard',
            fields=[
                ('buyerCard_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('card_number', models.IntegerField(max_length=100)),
                ('card_name', models.CharField(max_length=500)),
                ('expiry_date', models.DateField()),
                ('cvc_num', models.IntegerField(max_length=100)),
                ('token', models.CharField(max_length=500)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Buyer.buyer')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerAddress',
            fields=[
                ('buyerAddress_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(max_length=500)),
                ('address', models.TextField(max_length=500)),
                ('county', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('street_number', models.IntegerField(max_length=50)),
                ('home_number', models.IntegerField(max_length=50)),
                ('postal_code', models.IntegerField(max_length=50)),
                ('address_type', models.CharField(choices=[('HO', 'House'), ('OF', 'Office')], max_length=2)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Buyer.buyer')),
            ],
        ),
    ]
